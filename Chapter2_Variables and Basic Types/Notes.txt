1. Primitive built-in types
	signed & unsigned

	use double over float, use int over long

	If we assign an out-of-range value to an object of signed type, the result is undefined.

	signed will automatically converted to unsigned

	escape sequence

2. Variables
	Declaration and definition
		Recommend initializing every object of built-in type.

	Scope of the variables

	Reference
		An alias to the variable, point to the variable.

		Must be initialized.

		There is no way to rebind the reference with another variable

		Have no address, just refer to the object

	Pointer
		Like references, pointers are used for indirect access to other objects. Unlike a reference, a pointer is an object in its own right.

		A pointer holds the address of another object. We get the address of an object by usin the address-of operator (the & operator)

		A pointer holds the address of another object. We get the address of an object by usin the address-of operator.

		Dereference a ppinter yields the object to which the pointer points.

		It is illegal to assign a int value to a pointer

		Always initialize pointers

		The type void* is a special pointer type that can hold the address of any object. Like any other pointer, a void* pointer holds an address, but the type of the object at that address is unknown

	Examples:
		int i = 42;
		int&r=i; //& followsatypeandispartofadeclaration; r is a reference
		int *p;
		pointer
		// * follows a type and is part of a declaration; p is a 
		// & is used in an expression as the address-of operator
		// * is used in an expression as the dereference operator
		p = &i;
		*p = i;
		int &r2 = *p; // & is part of the declaration; * is the dereference operator

	Pointers to pointers
		We can define a reference to a pointer


	4. const Qualifier
		Should be initialized when declared

		Const variables are local to a file. Using const variable has the same name will generate seperate variables. If you want to share the const variables, you use extern keyword at both definition and declaration.

		Reference to const

		Pointer to const

		Constant expression
			Variables declared as constexpr are implicitly const and must be initialized by constant expressions.


	5. Dealing with Types
		Type aliases
			typedef

			using

		The auto type specifier

		The decltype
			we want to define a variable with a type that the compiler deduces from an expression but do not want to use that expression to initialize the variable. 

	6. Define own data structure
		Struct

		Preprocessor
			#ifdef, #ifndef, #endif

			Preprocessor variable names do not respect C++ scoping rules.

	Summary
		


		


